import 'package:cloud_firestore/cloud_firestore.dart';

Future<void> fixInvalidUserDocuments() async {
  final usersCollection = FirebaseFirestore.instance.collection('users');
  final snapshot = await usersCollection.get();

  for (final doc in snapshot.docs) {
    dynamic rawData;

    try {
      rawData = doc.data();
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ ${doc.id}: $e');
      continue;
    }

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ ‚Äî —Å–ø–∏—Å–æ–∫ (–æ—à–∏–±–æ—á–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
    if (rawData is List) {
      print('‚ö†Ô∏è –î–æ–∫—É–º–µ–Ω—Ç ${doc.id} —Å–æ–¥–µ—Ä–∂–∏—Ç List –≤–º–µ—Å—Ç–æ Map. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º...');

      Map<String, dynamic> fixedData = {};

      for (final item in rawData) {
        if (item is Map<String, dynamic>) {
          fixedData.addAll(item);
        } else {
          print('‚ùå –≠–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ —Å–ø–∏—Å–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Map: $item');
        }
      }

      // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
      await usersCollection.doc(doc.id).set(fixedData);
      print('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç ${doc.id} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
    }

    // –ï—Å–ª–∏ –≤—Å—ë –æ–∫
    else if (rawData is Map<String, dynamic>) {
      print('‚úîÔ∏è –î–æ–∫—É–º–µ–Ω—Ç ${doc.id} –≤ –ø–æ—Ä—è–¥–∫–µ');
    }

    // –ò–Ω–∞—á–µ ‚Äî –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø
    else {
      print('‚ùå –î–æ–∫—É–º–µ–Ω—Ç ${doc.id} —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø: ${rawData.runtimeType}');
    }
  }

  print('üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
}
